{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Button/Button.styles.jsx","components/Button/Button.jsx","components/Contact/Contact.styles.jsx","constants/IconSize.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styles.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styles.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","SectionContainer","styled","section","Section","children","title","IconButton","button","Button","onClick","type","allyProps","defaultProps","ContactsText","span","iconSize","Contact","name","number","onDeleteContact","size","aria-label","Contacts","ul","ContactsItem","li","ContactList","contacts","map","id","Form","form","Label","label","Input","input","Error","validate","values","errors","test","ContactForm","onSubmit","initialValues","setSubmitting","resetForm","touched","handleChange","handleSubmit","isSubmitting","onChange","value","disabled","Filter","debounceTimeout","className","css","DebounceInput","App","state","initialContacts","filter","changeFilter","e","setState","target","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","deleteContact","contactId","prevState","addContact","find","alert","uuid","localStorage","getItem","parsedContacts","JSON","parse","this","prevProps","nextContacts","setItem","stringify","visibleContacts","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,cAAgB,gC,6bCCrBC,EAAmBC,IAAOC,QAAV,uP,OCedC,I,EAAAA,EAdf,YAAuC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC3B,OACE,eAACL,EAAD,WACE,6BAAKK,IACJD,M,wBCLME,EAAaL,IAAOM,OAAV,sZ,gCCCvB,SAASC,EAAT,GAA4D,IAA1CJ,EAAyC,EAAzCA,SAAgBK,GAAyB,EAA/BC,KAA+B,EAAzBD,SAAYE,EAAa,iBACzD,OACE,cAACL,EAAD,yBAAYI,KAAK,SAASD,QAASA,GAAaE,GAAhD,aACGP,KAKPI,EAAOI,aAAe,CACpBH,QAAS,kBAAM,MACfL,SAAU,MASGI,I,IAAAA,ICpBFK,EAAeZ,IAAOa,KAAV,0FCFZC,GDSSd,IAAOM,OAAV,sbCRV,IC0BMS,I,IAAAA,EApBf,YAAqD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,gBAC/B,OACE,qCACE,eAACN,EAAD,WACE,cAAC,IAAD,CAASO,KAAML,IACdE,EAFH,KAEWC,KAEX,cAAC,EAAD,CAAQR,KAAK,SAASD,QAASU,EAAiBE,aAAW,cAA3D,SACE,cAAC,IAAD,CAAUD,KAAML,UCbXO,EAAWrB,IAAOsB,GAAV,gEAKRC,EAAevB,IAAOwB,GAAV,gMCmBVC,I,UAAAA,EApBf,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUR,EAAmB,EAAnBA,gBAC/B,OACE,cAACG,EAAD,UACGK,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAIZ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAACM,EAAD,UACE,cAAC,EAAD,CACEP,KAAMA,EACNC,OAAQA,EACRC,gBAAiB,kBAAMA,EAAgBU,OAJxBA,S,QCRdC,EAAO7B,IAAO8B,KAAV,2CAIJC,EAAQ/B,IAAOgC,MAAV,oHAOLC,EAAQjC,IAAOkC,MAAV,8KASL3B,EAASP,IAAOM,OAAV,kgBA6BN6B,EAAQnC,IAAOa,KAAV,qGChDZuB,EAAW,SAAAC,GACf,IAAMC,EAAS,GAoBf,OAnBKD,EAAOrB,KAEAqB,EAAOpB,OAGhB,0HAA8DsB,KAC7DF,EAAOrB,MAMR,8EAA8EuB,KAC7EF,EAAOpB,UAGTqB,EAAOrB,OACL,iiBARFqB,EAAOtB,KACL,kcAPFsB,EAAOrB,OAAS,oGAFhBqB,EAAOtB,KAAO,oGAkBTsB,GAGM,SAASE,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,OACE,cAAC,IAAD,CACEC,cAAe,CAAE1B,KAAM,GAAIC,OAAQ,IACnCmB,SAAUA,EACVK,SAAU,SAACJ,EAAD,GAA2C,IAAhCM,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCH,EAASJ,GACTM,GAAc,GACdC,KANJ,SASG,gBACCP,EADD,EACCA,OACAQ,EAFD,EAECA,QACAP,EAHD,EAGCA,OACAQ,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,aAND,OAQC,eAACnB,EAAD,CAAMY,SAAUM,EAAhB,UACE,eAAChB,EAAD,kBAEE,cAACE,EAAD,CACExB,KAAK,OACLO,KAAK,OACLiC,SAAUH,EACVI,MAAOb,EAAOrB,OAEf6B,EAAQ7B,MAAQsB,EAAOtB,MAAQ,cAACmB,EAAD,UAAQG,EAAOtB,UAEjD,eAACe,EAAD,oBAEE,cAACE,EAAD,CACExB,KAAK,MACLO,KAAK,SACLiC,SAAUH,EACVI,MAAOb,EAAOpB,SAEf4B,EAAQ5B,QAAUqB,EAAOrB,QAAU,cAACkB,EAAD,UAAQG,EAAOrB,YAErD,cAAC,EAAD,CACER,KAAK,SACL0C,SACEH,GAAgC,KAAhBX,EAAOrB,MAAiC,KAAlBqB,EAAOpB,OAHjD,gC,gBCjEGc,EAAQ/B,IAAOgC,MAAV,oH,IAOGhC,IAAOkC,MAAV,8K,kBCgBHkB,OAnBf,YAAqC,EAAnBF,MAAoB,IAAbD,EAAY,EAAZA,SACvB,OACE,eAAC,EAAD,mCAEE,cAAC,gBAAD,CACExC,KAAK,OACL4C,gBAAiB,IACjBJ,SAAUA,EACVK,UAAWC,KAAIC,oB,SC4ERC,G,4MA/EbC,MAAQ,CACNhC,SAAUiC,GACVC,OAAQ,GACR5C,KAAM,GACNC,OAAQ,I,EAqBV4C,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,OAAQE,EAAEE,OAAOd,S,EAGnCe,mBAAqB,WACnB,MAA6B,EAAKP,MAA1BhC,EAAR,EAAQA,SACFwC,EADN,EAAkBN,OACcO,cAEhC,OAAOzC,EAASkC,QAAO,SAAAQ,GAAO,OAC5BA,EAAQpD,KAAKmD,cAAcE,SAASH,O,EAIxCI,cAAgB,SAAAC,GACd,EAAKR,UAAS,SAAAS,GAAS,MAAK,CAC1B9C,SAAU8C,EAAU9C,SAASkC,QAAO,SAAAQ,GAAO,OAAIA,EAAQxC,KAAO2C,U,EAIlEE,WAAa,YAAuB,IAApBzD,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACpB,GAAI,EAAKyC,MAAMhC,SAASgD,MAAK,SAAAN,GAAO,OAAIA,EAAQpD,OAASA,KACvD2D,MAAM,GAAD,OAAI3D,EAAJ,iCADP,CAIA,IAAMoD,EAAU,CACdxC,GAAIgD,cACJ5D,OACAC,UAEF,EAAK8C,UAAS,gBAAGrC,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAE0C,GAAH,mBAAe1C,U,uDAhD3B,WACE,IAAMA,EAAWmD,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMvD,GAE9BqD,GACFG,KAAKnB,SAAS,CAAErC,SAAUqD,M,gCAI9B,SAAmBI,EAAWX,GAC5B,IAAMY,EAAeF,KAAKxB,MAAMhC,SAG5B0D,IAFiBZ,EAAU9C,UAG7BmD,aAAaQ,QAAQ,WAAYL,KAAKM,UAAUF,M,oBAsCpD,WACE,IAAQxB,EAAWsB,KAAKxB,MAAhBE,OACF2B,EAAkBL,KAAKjB,qBAE7B,OACE,eAAC,EAAD,WACE,2CACA,cAACzB,EAAD,CAAaC,SAAUyC,KAAKT,aAC5B,0CACA,cAAC,GAAD,CAAQb,OAAQA,EAAQX,SAAUiC,KAAKrB,eAEvC,cAAC,EAAD,CACEnC,SAAU6D,EACVrE,gBAAiBgE,KAAKZ,uB,GAzEdkB,aCEHC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.726d6e95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DebounceInput\":\"Filter_DebounceInput__mtk1R\"};","import styled from 'styled-components';\r\n\r\nexport const SectionContainer = styled.section`\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border: 1px #e4e6ee solid;\r\n  border-radius: 0px 0px 4px 4px;\r\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 25%);\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { SectionContainer } from './Section.styles';\r\n\r\nfunction Section({ children, title }) {\r\n  return (\r\n    <SectionContainer>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </SectionContainer>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import styled from 'styled-components';\r\n\r\nexport const IconButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 10px;\r\n  padding: 10px;\r\n\r\n  text-align: center;\r\n  letter-spacing: 0.06em;\r\n  background-color: #2196f3;\r\n  color: #fff;\r\n  border: 0;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n\r\n  & svg {\r\n    color: #ffffff;\r\n    margin-right: 0;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #1e81d3;\r\n  }\r\n`;\r\n","import { IconButton } from './Button.styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ children, type, onClick, ...allyProps }) {\r\n  return (\r\n    <IconButton type=\"button\" onClick={onClick} {...allyProps}>\r\n      {children}\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  'aria-label': PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactsText = styled.span`\r\n  & svg {\r\n    color: #2196f3;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 10px;\r\n  padding: 10px 28px;\r\n  max-width: 200px;\r\n\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  letter-spacing: 0.06em;\r\n  text-decoration: none;\r\n  background-color: #2196f3;\r\n  color: #fff;\r\n  border: 0;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #1e81d3;\r\n  }\r\n`;\r\n","export const iconSize = {\n  small: 15,\n};\n","import PropTypes from 'prop-types';\r\nimport { FiPhone, FiTrash2 } from 'react-icons/fi';\r\nimport Button from '../Button';\r\n\r\nimport { ContactsText } from './Contact.styles';\r\nimport { iconSize } from 'constants/index';\r\n\r\nfunction Contact({ name, number, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <ContactsText>\r\n        <FiPhone size={iconSize.small} />\r\n        {name}: {number}\r\n      </ContactsText>\r\n      <Button type=\"button\" onClick={onDeleteContact} aria-label=\"add contact\">\r\n        <FiTrash2 size={iconSize.small} />\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default Contact;\r\n","import styled from 'styled-components';\r\n\r\nexport const Contacts = styled.ul`\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ContactsItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-items: baseline;\r\n  justify-content: space-between;\r\n  width: 400px;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Contact from '../Contact';\r\n\r\nimport { Contacts, ContactsItem } from './ContactList.styles';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <Contacts>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsItem key={id}>\r\n          <Contact\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={() => onDeleteContact(id)}\r\n          />\r\n        </ContactsItem>\r\n      ))}\r\n    </Contacts>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  padding: 0;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin: 10px 0;\r\n  height: 30px;\r\n  padding-left: 15px;\r\n  background-color: transparent;\r\n  border: 1px solid #2196f3;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 10px;\r\n  padding: 10px 28px;\r\n  max-width: 200px;\r\n\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  letter-spacing: 0.06em;\r\n  text-decoration: none;\r\n  background-color: #2196f3;\r\n  color: #fff;\r\n  border: 0;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  &:disabled,\r\n  &:disabled:hover {\r\n    background-color: #7fbff3;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #1e81d3;\r\n  }\r\n`;\r\n\r\nexport const Error = styled.span`\r\n  left: 400px;\r\n  bottom: 0px;\r\n  color: coral;\r\n  margin-bottom: 10px;\r\n`;\r\n","import { Formik } from 'formik';\r\nimport { Form, Input, Label, Error, Button } from './ContactForm.styles';\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = 'Обязательное поле';\r\n  } else if (!values.number) {\r\n    errors.number = 'Обязательное поле';\r\n  } else if (\r\n    !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(\r\n      values.name,\r\n    )\r\n  ) {\r\n    errors.name =\r\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\";\r\n  } else if (\r\n    !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\r\n      values.number,\r\n    )\r\n  ) {\r\n    errors.number =\r\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: '', number: '' }}\r\n      validate={validate}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        onSubmit(values);\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Label>\r\n            Name\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n              value={values.name}\r\n            />\r\n            {touched.name && errors.name && <Error>{errors.name}</Error>}\r\n          </Label>\r\n          <Label>\r\n            Number\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              onChange={handleChange}\r\n              value={values.number}\r\n            />\r\n            {touched.number && errors.number && <Error>{errors.number}</Error>}\r\n          </Label>\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={\r\n              isSubmitting || values.name === '' || values.number === ''\r\n            }\r\n          >\r\n            Add contacts\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Label = styled.label`\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin: 10px 0;\r\n  height: 30px;\r\n  padding-left: 15px;\r\n  background-color: transparent;\r\n  border: 1px solid #2196f3;\r\n  border-radius: 4px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { Label } from './Filter.styles';\r\nimport css from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <Label>\r\n      Find contacts by name\r\n      <DebounceInput\r\n        type=\"text\"\r\n        debounceTimeout={300}\r\n        onChange={onChange}\r\n        className={css.DebounceInput}\r\n      />\r\n    </Label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport Section from './components/Section';\r\nimport ContactList from './components/ContactList';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\n\r\nimport initialContacts from './data/contacts.json';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: initialContacts,\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    if (this.state.contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact}></ContactForm>\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onChange={this.changeFilter} />\r\n\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        ></ContactList>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}