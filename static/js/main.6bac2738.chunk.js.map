{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/Contact/Contact.styled.js","constants/IconSize.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["SectionContainer","Section","children","title","IconButton","theme","colors","blue","white","accentBlue","Button","onClick","type","allyProps","defaultProps","ContactsText","iconSize","Contact","name","number","onDeleteContact","size","aria-label","Contacts","ContactsItem","ContactList","contacts","map","id","Form","Label","Input","Error","validate","values","errors","test","ContactForm","onSubmit","initialValues","setSubmitting","resetForm","touched","handleChange","handleSubmit","isSubmitting","onChange","value","disabled","FilterInput","DebounceInput","Filter","debounceTimeout","App","state","initialContacts","filter","changeFilter","e","setState","target","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","deleteContact","contactId","prevState","addContact","find","alert","uuid","localStorage","getItem","parsedContacts","JSON","parse","this","prevProps","nextContacts","setItem","stringify","visibleContacts","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bac2738.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const SectionContainer = styled.section`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  border: 1px #e4e6ee solid;\n  border-radius: 0px 0px 4px 4px;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 25%);\n  padding: 20px;\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\r\nimport { SectionContainer } from './Section.styled';\r\n\r\nfunction Section({ children, title }) {\r\n  return (\r\n    <SectionContainer>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </SectionContainer>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import styled from '@emotion/styled/macro';\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 10px;\n  padding: 10px;\n\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: ${({ theme }) => theme.colors.blue};\n  color: ${({ theme }) => theme.colors.white};\n  border: 0;\n  border-radius: 50%;\n  cursor: pointer;\n\n  & svg {\n    color: ${({ theme }) => theme.colors.white};\n    margin-right: 0;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.accentBlue};\n  }\n`;\n","import { IconButton } from './Button.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ children, type, onClick, ...allyProps }) {\r\n  return (\r\n    <IconButton type=\"button\" onClick={onClick} {...allyProps}>\r\n      {children}\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  'aria-label': PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import styled from '@emotion/styled/macro';\n\nexport const ContactsText = styled.span`\n  & svg {\n    color: ${({ theme }) => theme.colors.blue};\n    margin-right: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 10px;\n  padding: 10px 28px;\n  max-width: 200px;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-align: center;\n  letter-spacing: 0.06em;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.colors.blue};\n  color: ${({ theme }) => theme.colors.white};\n  border: 0;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.accentBlue};\n  }\n`;\n","export const iconSize = {\n  small: 15,\n};\n","import PropTypes from 'prop-types';\r\nimport { FiPhone, FiTrash2 } from 'react-icons/fi';\r\nimport Button from '../Button';\r\n\r\nimport { ContactsText } from './Contact.styled';\r\nimport { iconSize } from 'constants/index';\r\n\r\nfunction Contact({ name, number, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <ContactsText>\r\n        <FiPhone size={iconSize.small} />\r\n        {name}: {number}\r\n      </ContactsText>\r\n      <Button type=\"button\" onClick={onDeleteContact} aria-label=\"add contact\">\r\n        <FiTrash2 size={iconSize.small} />\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default Contact;\r\n","import styled from '@emotion/styled/macro';\n\nexport const Contacts = styled.ul`\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-items: baseline;\n  justify-content: space-between;\n  width: 400px;\n  margin-bottom: 10px;\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\r\n\r\nimport Contact from '../Contact';\r\n\r\nimport { Contacts, ContactsItem } from './ContactList.styled';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <Contacts>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsItem key={id}>\r\n          <Contact\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={() => onDeleteContact(id)}\r\n          />\r\n        </ContactsItem>\r\n      ))}\r\n    </Contacts>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form`\n  padding: 0;\n`;\n\nexport const Label = styled.label`\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n`;\n\nexport const Input = styled.input`\n  margin: 10px 0;\n  height: 30px;\n  padding-left: 15px;\n  background-color: transparent;\n  border: 1px solid ${({ theme }) => theme.colors.blue};\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 10px;\n  padding: 10px 28px;\n  max-width: 200px;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-align: center;\n  letter-spacing: 0.06em;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.colors.blue};\n  color: #fff;\n  border: 0;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:disabled,\n  &:disabled:hover {\n    background-color: #7fbff3;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.accentBlue};\n  }\n`;\n\nexport const Error = styled.span`\n  left: 400px;\n  bottom: 0px;\n  color: coral;\n  margin-bottom: 10px;\n`;\n","import { Formik } from 'formik';\r\nimport { Form, Input, Label, Error, Button } from './ContactForm.styled';\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = 'Обязательное поле';\r\n  } else if (!values.number) {\r\n    errors.number = 'Обязательное поле';\r\n  } else if (\r\n    !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(\r\n      values.name,\r\n    )\r\n  ) {\r\n    errors.name =\r\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\";\r\n  } else if (\r\n    !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\r\n      values.number,\r\n    )\r\n  ) {\r\n    errors.number =\r\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: '', number: '' }}\r\n      validate={validate}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        onSubmit(values);\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Label>\r\n            Name\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n              value={values.name}\r\n            />\r\n            {touched.name && errors.name && <Error>{errors.name}</Error>}\r\n          </Label>\r\n          <Label>\r\n            Number\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              onChange={handleChange}\r\n              value={values.number}\r\n            />\r\n            {touched.number && errors.number && <Error>{errors.number}</Error>}\r\n          </Label>\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={\r\n              isSubmitting || values.name === '' || values.number === ''\r\n            }\r\n          >\r\n            Add contacts\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n","import { DebounceInput } from 'react-debounce-input';\nimport styled from '@emotion/styled/macro';\n\nexport const Label = styled.label`\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n`;\n\nexport const FilterInput = styled(DebounceInput)`\n  margin: 10px 0;\n  height: 30px;\n  padding-left: 15px;\n  background-color: transparent;\n  border: 1px solid ${({ theme }) => theme.colors.blue};\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\r\n\r\nimport { Label, FilterInput } from './Filter.styled';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <Label>\r\n      Find contacts by name\r\n      <FilterInput type=\"text\" debounceTimeout={300} onChange={onChange} />\r\n    </Label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport Section from 'components/Section';\r\nimport ContactList from 'components/ContactList';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\n\r\nimport initialContacts from 'data/contacts.json';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: initialContacts,\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    if (this.state.contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact}></ContactForm>\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onChange={this.changeFilter} />\r\n\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        ></ContactList>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst theme = {\n  colors: {\n    white: '#ffffff',\n    blue: '#2196f3',\n    accentBlue: '#1e81d3',\n  },\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}