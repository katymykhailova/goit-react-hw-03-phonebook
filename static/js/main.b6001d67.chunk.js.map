{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/Contact/Contact.styled.js","constants/IconSize.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ContainerFilter/ContainerFilter.styled.js","components/ContainerFilter/ContainerFilter.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["SectionContainer","Section","children","title","IconButton","theme","colors","blue","white","accentBlue","Button","onClick","type","allyProps","defaultProps","ContactsText","iconSize","Contact","name","number","onDeleteContact","size","aria-label","Contacts","ContactsItem","grey","ContactList","contacts","map","id","Form","Label","Input","Error","MyEnhancedForm","withFormik","mapPropsToValues","validate","values","props","errors","test","find","contact","handleSubmit","setSubmitting","resetForm","onSubmit","touched","handleChange","isSubmitting","onChange","value","disabled","FilterInput","DebounceInput","Filter","debounceTimeout","ModalBackdrop","ModalContent","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","Component","Container","ContainerFilter","App","state","initialContacts","filter","showModal","changeFilter","setState","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","addContact","uuid","toggleModal","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","prevContacts","setItem","stringify","console","log","length","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6001d67.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const SectionContainer = styled.section`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  border: 1px #e4e6ee solid;\n  border-radius: 0px 0px 4px 4px;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 25%);\n  padding: 20px;\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\r\nimport { SectionContainer } from './Section.styled';\r\n\r\nfunction Section({ children, title }) {\r\n  return (\r\n    <SectionContainer>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </SectionContainer>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import styled from '@emotion/styled/macro';\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 10px;\n  padding: 10px;\n\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: ${({ theme }) => theme.colors.blue};\n  color: ${({ theme }) => theme.colors.white};\n  border: 0;\n  border-radius: 50%;\n  cursor: pointer;\n\n  & svg {\n    color: ${({ theme }) => theme.colors.white};\n    margin-right: 0;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.accentBlue};\n  }\n`;\n","import { IconButton } from './Button.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ children, type, onClick, ...allyProps }) {\r\n  return (\r\n    <IconButton type=\"button\" onClick={onClick} {...allyProps}>\r\n      {children}\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  'aria-label': PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import styled from '@emotion/styled/macro';\n\nexport const ContactsText = styled.span`\n  & svg {\n    color: ${({ theme }) => theme.colors.blue};\n    margin-right: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 10px;\n  padding: 10px 28px;\n  max-width: 200px;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-align: center;\n  letter-spacing: 0.06em;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.colors.blue};\n  color: ${({ theme }) => theme.colors.white};\n  border: 0;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.accentBlue};\n  }\n`;\n","export const iconSize = {\n  small: 15,\n};\n","import PropTypes from 'prop-types';\r\nimport { FiPhone, FiTrash2 } from 'react-icons/fi';\r\nimport Button from '../Button';\r\n\r\nimport { ContactsText } from './Contact.styled';\r\nimport { iconSize } from 'constants/index';\r\n\r\nfunction Contact({ name, number, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <ContactsText>\r\n        <FiPhone size={iconSize.small} />\r\n        {name}: {number}\r\n      </ContactsText>\r\n      <Button type=\"button\" onClick={onDeleteContact} aria-label=\"add contact\">\r\n        <FiTrash2 size={iconSize.small} />\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default Contact;\r\n","import styled from '@emotion/styled/macro';\n\nexport const Contacts = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 24px;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-items: baseline;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  padding: 10px;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grey};\n`;\n","import PropTypes from 'prop-types';\r\n\r\nimport Contact from '../Contact';\r\n\r\nimport { Contacts, ContactsItem } from './ContactList.styled';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <Contacts>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsItem key={id}>\r\n          <Contact\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={() => onDeleteContact(id)}\r\n          />\r\n        </ContactsItem>\r\n      ))}\r\n    </Contacts>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form`\n  padding: 0;\n`;\n\nexport const Label = styled.label`\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n`;\n\nexport const Input = styled.input`\n  margin: 10px 0;\n  height: 30px;\n  padding-left: 15px;\n  background-color: transparent;\n  border: 1px solid ${({ theme }) => theme.colors.blue};\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 10px;\n  padding: 10px 28px;\n  max-width: 200px;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-align: center;\n  letter-spacing: 0.06em;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.colors.blue};\n  color: #fff;\n  border: 0;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:disabled,\n  &:disabled:hover {\n    background-color: #7fbff3;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.accentBlue};\n  }\n`;\n\nexport const Error = styled.span`\n  left: 400px;\n  bottom: 0px;\n  color: coral;\n  margin-bottom: 10px;\n`;\n","import { withFormik } from 'formik';\r\nimport { Form, Input, Label, Error, Button } from './ContactForm.styled';\r\n\r\nfunction ContactForm(props) {\r\n  const { values, touched, errors, handleChange, handleSubmit, isSubmitting } =\r\n    props;\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label>\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          value={values.name}\r\n        />\r\n        {touched.name && errors.name && <Error>{errors.name}</Error>}\r\n      </Label>\r\n      <Label>\r\n        Number\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          onChange={handleChange}\r\n          value={values.number}\r\n        />\r\n        {touched.number && errors.number && <Error>{errors.number}</Error>}\r\n      </Label>\r\n      <Button\r\n        type=\"submit\"\r\n        disabled={isSubmitting || values.name === '' || values.number === ''}\r\n      >\r\n        Add contacts\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst MyEnhancedForm = withFormik({\r\n  mapPropsToValues: () => ({ name: '', number: '' }),\r\n\r\n  validate: (values, props) => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n      errors.name = 'Обязательное поле';\r\n    } else if (!values.number) {\r\n      errors.number = 'Обязательное поле';\r\n    } else if (\r\n      !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(\r\n        values.name,\r\n      )\r\n    ) {\r\n      errors.name =\r\n        \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\";\r\n    } else if (props.contacts.find(contact => contact.name === values.name)) {\r\n      errors.name = `${values.name} уже есть в контактах.`;\r\n    } else if (\r\n      !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\r\n        values.number,\r\n      )\r\n    ) {\r\n      errors.number =\r\n        'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +';\r\n    }\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, { props, setSubmitting, resetForm }) => {\r\n    props.onSubmit(values);\r\n    setSubmitting(false);\r\n    resetForm();\r\n  },\r\n})(ContactForm);\r\n\r\nexport default MyEnhancedForm;\r\n","import { DebounceInput } from 'react-debounce-input';\nimport styled from '@emotion/styled/macro';\n\nexport const Label = styled.label`\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  /* margin-left: 10px; */\n`;\n\nexport const FilterInput = styled(DebounceInput)`\n  width: 345px;\n  margin: 10px 0 0 0;\n  height: 30px;\n  padding-left: 15px;\n  background-color: transparent;\n  border: 1px solid ${({ theme }) => theme.colors.grey};\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\r\n\r\nimport { Label, FilterInput } from './Filter.styled';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <Label>\r\n      Find contacts by name\r\n      <FilterInput type=\"text\" debounceTimeout={300} onChange={onChange} />\r\n    </Label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from '@emotion/styled/macro';\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const ModalContent = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-height: 200px;\n  max-width: 400px;\n  width: 100%;\n  padding: 12px;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { ModalBackdrop, ModalContent } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <ModalBackdrop onClick={this.handleBackdropClick}>\r\n        <ModalContent>{this.props.children}</ModalContent>\r\n      </ModalBackdrop>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.section`\n  display: flex;\n  align-items: flex-end;\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0;\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\r\nimport { Container } from './ContainerFilter.styled';\r\n\r\nfunction ContainerFilter({ children }) {\r\n  return <Container>{children}</Container>;\r\n}\r\n\r\nContainerFilter.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ContainerFilter;\r\n","import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { FiPlus } from 'react-icons/fi';\r\n\r\nimport Section from 'components/Section';\r\nimport ContactList from 'components/ContactList';\r\nimport ContactForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport Button from 'components/Button';\r\nimport Modal from './components/Modal';\r\nimport ContainerFilter from './components/ContainerFilter';\r\n\r\nimport initialContacts from 'data/contacts.json';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: initialContacts,\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n    showModal: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n\r\n    console.log(nextContacts.length);\r\n    console.log(prevContacts.length);\r\n\r\n    if (\r\n      nextContacts.length > prevContacts.length &&\r\n      prevContacts.length !== 0\r\n    ) {\r\n      this.toggleModal();\r\n    }\r\n  }\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    // if (this.state.contacts.find(contact => contact.name === name)) {\r\n    //   alert(`${name} is already in contacts.`);\r\n    //   return;\r\n    // }\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter, showModal, contacts } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContainerFilter>\r\n          <Filter filter={filter} onChange={this.changeFilter} />\r\n          <Button\r\n            type=\"button\"\r\n            onClick={this.toggleModal}\r\n            aria-label=\"add contact\"\r\n          >\r\n            <FiPlus size={16} />\r\n          </Button>\r\n        </ContainerFilter>\r\n\r\n        <h2>Contacts</h2>\r\n\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        ></ContactList>\r\n\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <ContactForm\r\n              onSubmit={this.addContact}\r\n              contacts={contacts}\r\n            ></ContactForm>\r\n          </Modal>\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst theme = {\n  colors: {\n    white: '#ffffff',\n    blue: '#2196f3',\n    accentBlue: '#1e81d3',\n    grey: '#e1dfdf',\n  },\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}